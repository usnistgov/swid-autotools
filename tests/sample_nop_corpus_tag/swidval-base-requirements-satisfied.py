#!/usr/bin/env python

# This software was developed at the National Institute of Standards
# and Technology by employees of the Federal Government in the course
# of their official duties. Pursuant to title 17 Section 105 of the
# United States Code this software is not subject to copyright
# protection and is in the public domain. NIST assumes no
# responsibility whatsoever for its use by other parties, and makes
# no guarantees, expressed or implied, about its quality,
# reliability, or any other characteristic.
#
# We would appreciate acknowledgement if the software is used.

"""
This program takes as input the validation-result.xml file generated by swidval, and prints to stderr the number of base requirements that failed.  On counting more than 0 FAIL statuses, the program exits non-0.
"""

__version__ = "0.1.0"

import os
import logging
import sys
import xml.etree.ElementTree as ET

_logger = logging.getLogger(os.path.basename(__file__))

def main():
    root = ET.parse(args.in_xml)
    fail_count = 0
    for elem in root.findall("./assessment-results/results//base-requirement/status"):
        if elem.text == "FAIL":
            fail_count += 1
    _logger.debug("fail_count=%d" % fail_count)
    rc = 1 if fail_count > 0 else 0
    sys.exit(rc)

if __name__ == "__main__":
    import argparse
    parser = argparse.ArgumentParser()
    parser.add_argument("-d", "--debug", action="store_true")
    parser.add_argument("in_xml")
    args = parser.parse_args()
    logging.basicConfig(level=logging.DEBUG if args.debug else logging.INFO)
    main()
